// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"go.opentelemetry.io/otel/sdk/metric"
	trace2 "go.opentelemetry.io/otel/sdk/trace"
	"supernova/executor/processor"
	"supernova/executor/service"
	"supernova/pkg/discovery"
	"supernova/pkg/session/trace"
)

// Injectors from wire.go:

func genExecutor(instanceID string, oTelConfig *trace.OTelConfig, traceProvider *trace2.TracerProvider, meterProvider *metric.MeterProvider, tags []string, pcs map[string]*processor.PC, serveConf *discovery.ServiceServeConf, processorCount int, client discovery.DiscoverClient, extraConf map[string]string) (*Executor, error) {
	duplicateService := service.NewDuplicateService()
	statisticsService := service.NewStatisticsService(instanceID, oTelConfig)
	processorService := service.NewProcessorService(pcs, instanceID, oTelConfig)
	executeService := service.NewExecuteService(statisticsService, processorService, duplicateService, processorCount, oTelConfig)
	executor := newExecutorInner(instanceID, oTelConfig, traceProvider, meterProvider, tags, serveConf, processorCount, extraConf, client, duplicateService, executeService, processorService, statisticsService)
	return executor, nil
}
